# TEN7 Jekyll Deployment Workflow
name: Deployment

env:
  BUILD_SUBDIR: build
  REPO_SUBDIR: src
  WEBROOT_SUBDIR: src/web
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - main
      - develop
      - preview
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Make directories
        run: |
          mkdir ${GITHUB_WORKSPACE}/${{ env.REPO_SUBDIR }}
          mkdir ${GITHUB_WORKSPACE}/${{ env.BUILD_SUBDIR }}
 
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          path: ${{ env.REPO_SUBDIR }} # This is from the root of the 'container' rather than the root

      - name: Checkout main build repo
        if: github.ref_name == 'main'
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: ${{ env.BUILD_SUBDIR }}
          
      - name: Checkout dev build repo
        if: github.ref_name == 'develop'
        uses: actions/checkout@v3
        with:
          ref: gh-pages-${{ github.ref_name }}
          path: ${{ env.BUILD_SUBDIR }}
          
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.6.x

      - name: Install
        run: |
          cd ${GITHUB_WORKSPACE}/${{ env.WEBROOT_SUBDIR }}
          npm ci

      - name: Setup Ruby Pkgs
        uses: ruby/setup-ruby-pkgs@v1.32.0
        with:
          bundler-cache: true
          working-directory: ${{env.WEBROOT_SUBDIR}}
          ruby-version: '3.0'
        
      - name: Build Develop 
        if: github.ref_name == 'develop'
        run: |
          cd ${GITHUB_WORKSPACE}/${{ env.WEBROOT_SUBDIR }}
          bundle config set --local path 'vendor/bundle'
          npm install
          bundle install
          JEKYLL_ENV=development bundle exec jekyll build -V --config _config.yml,_config_gh_predev.yml
        
      # Build Main branch
      - name: Build main
        if: github.ref_name == 'main'
        run: | 
          cd ${GITHUB_WORKSPACE}/${{ env.WEBROOT_SUBDIR }}
          bundle config set --local path 'vendor/bundle'
          bundle install
          bundle exec jekyll clean
          JEKYLL_ENV=production bundle exec jekyll build -V --config _config.yml,_config_gh_main.yml

      - name: Optimize Images
        if: github.ref_name == 'main'
        run: |
          cd ${GITHUB_WORKSPACE}/${{ env.WEBROOT_SUBDIR }}
          bundle exec image_optim --no-svgo --no-pngcrush --no-oxipng --no-jhead --no-gifsicle --no-jpegtran --no-advpng --no-pngout --no-pngquant --verbose --timeout 3 --recursive ${GITHUB_WORKSPACE}/${{ env.BUILD_SUBDIR }}/assets/images/
        
      - name: Commit changes
        run: |
          cd ${GITHUB_WORKSPACE}/${{ env.BUILD_SUBDIR }}
          touch .nojekyll
          echo "history.innocenceproject.org" > CNAME
          git config --global user.email "$(git log -n 1 --pretty=format:%an)"
          git config --global user.name "$(git log -n 1 --pretty=format:%ae)"
          git add .
          git commit -a -m "Automated build from commit: $GITHUB_SHA"
        continue-on-error: true
         
      - name: Deploy main
        if: ${{ github.ref_name == 'main' }} 
        run: | 
          cd ${GITHUB_WORKSPACE}/${{ env.BUILD_SUBDIR }}
          git push -f
          
      - name: Push develop
        if: ${{ github.ref_name == 'develop' }}
        run: |
          cd ${GITHUB_WORKSPACE}/${{ env.BUILD_SUBDIR }}
          git push --force origin HEAD:gh-pages-develop
